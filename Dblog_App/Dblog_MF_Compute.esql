

CREATE COMPUTE MODULE Dblog_MF_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		   CALL CopyEntireMessage();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		DECLARE inref REFERENCE TO InputRoot.XMLNSC;
		DECLARE name,msgid,appname,msgflowname,time_stamp,request,response CHARACTER;
		SET msgid=CAST(InputLocalEnvironment.Destination.HTTP.RequestIdentifier AS CHARACTER);
		SET name=inref.std.Name;
		DECLARE query CHARACTER 'select * from std where std_name=?';
		SET OutputRoot.XMLNSC.Res.data=PASSTHRU(query VALUES(name));
		DECLARE outref REFERENCE TO OutputRoot.XMLNSC.Res.Data;
		SET response=outref;
		SET request=CAST(ASBITSTREAM(inref CCSID InputRoot.Properties.CodedCharSetId ENCODING InputRoot.Properties.Encoding) AS CHARACTER CCSID InputRoot.Properties.CodedCharSetId);
		SET response=CAST(ASBITSTREAM(outref CCSID InputRoot.Properties.CodedCharSetId ENCODING InputRoot.Properties.Encoding) AS CHARACTER CCSID InputRoot.Properties.CodedCharSetId);
		SET response=response;
		SET appname=ApplicationLabel;
		SET msgflowname=MessageFlowLabel;
		SET time_stamp=CAST(CURRENT_TIMESTAMP AS CHARACTER FORMAT 'DD:MM:YYYY HH:MM:SS');
		CALL myDbProc(msgid,appname,msgflowname,time_stamp,request,response);
	END;
END MODULE;
CREATE PROCEDURE myDbProc(IN msgid CHARACTER,IN appname CHARACTER,IN msgflowname CHARACTER,IN time_stamp CHARACTER,IN request CHARACTER,IN response CHARACTER )
LANGUAGE DATABASE
EXTERNAL NAME "dbproc";
